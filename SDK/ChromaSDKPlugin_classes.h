// Class ChromaSDKPlugin.ChromaSDKPluginAnimation1DObject
// Size: 0x78 (Inherited: 0x28)
struct UChromaSDKPluginAnimation1DObject : UObject {
	char UnknownData_28[0x8]; // 0x28(0x08)
	enum class EChromaSDKDevice1DEnum Device; // 0x30(0x01)
	char UnknownData_31[0x7]; // 0x31(0x07)
	struct TArray<struct FChromaSDKColorFrame1D> Frames; // 0x38(0x10)
	char UnknownData_48[0x30]; // 0x48(0x30)

	void Unload(); // Function ChromaSDKPlugin.ChromaSDKPluginAnimation1DObject.Unload // (Final|Native|Public|BlueprintCallable) // @ game+0xedc9e0
	bool IsLoaded(); // Function ChromaSDKPlugin.ChromaSDKPluginAnimation1DObject.IsLoaded // (Final|Native|Public|BlueprintCallable) // @ game+0xed64a0
};

// Class ChromaSDKPlugin.ChromaSDKPluginAnimation2DObject
// Size: 0x78 (Inherited: 0x28)
struct UChromaSDKPluginAnimation2DObject : UObject {
	char UnknownData_28[0x8]; // 0x28(0x08)
	enum class EChromaSDKDevice2DEnum Device; // 0x30(0x01)
	char UnknownData_31[0x7]; // 0x31(0x07)
	struct TArray<struct FChromaSDKColorFrame2D> Frames; // 0x38(0x10)
	char UnknownData_48[0x30]; // 0x48(0x30)

	void Unload(); // Function ChromaSDKPlugin.ChromaSDKPluginAnimation2DObject.Unload // (Final|Native|Public|BlueprintCallable) // @ game+0xedc9e0
	bool IsLoaded(); // Function ChromaSDKPlugin.ChromaSDKPluginAnimation2DObject.IsLoaded // (Final|Native|Public|BlueprintCallable) // @ game+0xed64a0
};

// Class ChromaSDKPlugin.ChromaSDKPluginBPLibrary
// Size: 0x28 (Inherited: 0x28)
struct UChromaSDKPluginBPLibrary : UBlueprintFunctionLibrary {

	void UnloadAnimationName(struct FString animationName); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.UnloadAnimationName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xedca70
	void UnloadAnimation(int32_t animationId); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.UnloadAnimation // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xedca00
	void TrimStartFramesName(struct FString animationName, int32_t numberOfFrames); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.TrimStartFramesName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xedc910
	void TrimStartFrames(int32_t animationId, int32_t numberOfFrames); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.TrimStartFrames // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xedc860
	void TrimFrameName(struct FString animationName, int32_t frameId); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.TrimFrameName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xedc790
	void TrimFrame(int32_t animationId, int32_t frameId); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.TrimFrame // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xedc6e0
	void TrimEndFramesName(struct FString animationName, int32_t lastFrameId); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.TrimEndFramesName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xedc610
	void TrimEndFrames(int32_t animationId, int32_t lastFrameId); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.TrimEndFrames // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xedc560
	struct FLinearColor ToLinearColor(int32_t colorParam); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.ToLinearColor // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0xedc4d0
	int32_t ToBGR(struct FLinearColor colorParam); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.ToBGR // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0xedc440
	void SubtractNonZeroTargetAllKeysAllFramesOffsetName(struct FString sourceAnimationName, struct FString targetAnimationName, int32_t Offset); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.SubtractNonZeroTargetAllKeysAllFramesOffsetName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xedc320
	void SubtractNonZeroTargetAllKeysAllFramesOffset(int32_t sourceAnimationId, int32_t targetAnimationId, int32_t Offset); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.SubtractNonZeroTargetAllKeysAllFramesOffset // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xedc230
	void SubtractNonZeroTargetAllKeysAllFramesName(struct FString sourceAnimationName, struct FString targetAnimationName); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.SubtractNonZeroTargetAllKeysAllFramesName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xedc150
	void SubtractNonZeroTargetAllKeysAllFrames(int32_t sourceAnimationId, int32_t targetAnimationId); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.SubtractNonZeroTargetAllKeysAllFrames // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xedc0a0
	void SubtractNonZeroAllKeysName(struct FString sourceAnimationName, struct FString targetAnimationName, int32_t frameId); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.SubtractNonZeroAllKeysName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xedbf80
	void SubtractNonZeroAllKeysAllFramesOffsetName(struct FString sourceAnimationName, struct FString targetAnimationName, int32_t Offset); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.SubtractNonZeroAllKeysAllFramesOffsetName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xedbe60
	void SubtractNonZeroAllKeysAllFramesOffset(int32_t sourceAnimationId, int32_t targetAnimationId, int32_t Offset); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.SubtractNonZeroAllKeysAllFramesOffset // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xedbd70
	void SubtractNonZeroAllKeysAllFramesName(struct FString sourceAnimationName, struct FString targetAnimationName); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.SubtractNonZeroAllKeysAllFramesName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xedbc90
	void SubtractNonZeroAllKeysAllFrames(int32_t sourceAnimationId, int32_t targetAnimationId); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.SubtractNonZeroAllKeysAllFrames // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xedbbe0
	void SubtractNonZeroAllKeys(int32_t sourceAnimationId, int32_t targetAnimationId, int32_t frameId); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.SubtractNonZeroAllKeys // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xedbaf0
	void StopAnimationType(enum class EChromaSDKDeviceEnum Device); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.StopAnimationType // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xedb9c0
	void StopAnimations(struct TArray<struct FString> animationNames); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.StopAnimations // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0xedba30
	void StopAnimationComposite(struct FString animationName); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.StopAnimationComposite // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xedb930
	void StopAnimation(struct FString animationName); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.StopAnimation // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xedb8a0
	void StopAll(); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.StopAll // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xedb880
	void SetMouseLedColor(enum class EChromaSDKMouseLed led, struct FLinearColor colorParam, struct TArray<struct FChromaSDKColors> Colors); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.SetMouseLedColor // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0xedb730
	void SetKeysNonZeroColorName(struct FString animationName, int32_t frameIndex, struct TArray<enum class EChromaSDKKeyboardKey> Keys, struct FLinearColor colorParam); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.SetKeysNonZeroColorName // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0xedb5b0
	void SetKeysNonZeroColorAllFramesName(struct FString animationName, struct TArray<enum class EChromaSDKKeyboardKey> Keys, struct FLinearColor colorParam); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.SetKeysNonZeroColorAllFramesName // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0xedb470
	void SetKeysNonZeroColorAllFrames(int32_t animationId, struct TArray<enum class EChromaSDKKeyboardKey> Keys, struct FLinearColor colorParam); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.SetKeysNonZeroColorAllFrames // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0xedb340
	void SetKeysNonZeroColor(int32_t animationId, int32_t frameIndex, struct TArray<enum class EChromaSDKKeyboardKey> Keys, struct FLinearColor colorParam); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.SetKeysNonZeroColor // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0xedb1d0
	void SetKeysColorRGBName(struct FString animationName, int32_t frameIndex, struct TArray<enum class EChromaSDKKeyboardKey> Keys, int32_t red, int32_t green, int32_t blue); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.SetKeysColorRGBName // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0xedaff0
	void SetKeysColorRGB(int32_t animationId, int32_t frameIndex, struct TArray<enum class EChromaSDKKeyboardKey> Keys, int32_t red, int32_t green, int32_t blue); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.SetKeysColorRGB // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0xedae30
	void SetKeysColorName(struct FString animationName, int32_t frameIndex, struct TArray<enum class EChromaSDKKeyboardKey> Keys, struct FLinearColor colorParam); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.SetKeysColorName // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0xedacb0
	void SetKeysColorAllFramesRGBName(struct FString animationName, struct TArray<enum class EChromaSDKKeyboardKey> Keys, int32_t red, int32_t green, int32_t blue); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.SetKeysColorAllFramesRGBName // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0xedab10
	void SetKeysColorAllFramesRGB(int32_t animationId, struct TArray<enum class EChromaSDKKeyboardKey> Keys, int32_t red, int32_t green, int32_t blue); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.SetKeysColorAllFramesRGB // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0xeda970
	void SetKeysColorAllFramesName(struct FString animationName, struct TArray<enum class EChromaSDKKeyboardKey> Keys, struct FLinearColor colorParam); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.SetKeysColorAllFramesName // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0xeda830
	void SetKeysColorAllFrames(int32_t animationId, struct TArray<enum class EChromaSDKKeyboardKey> Keys, struct FLinearColor colorParam); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.SetKeysColorAllFrames // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0xeda700
	void SetKeysColor(int32_t animationId, int32_t frameIndex, struct TArray<enum class EChromaSDKKeyboardKey> Keys, struct FLinearColor colorParam); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.SetKeysColor // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0xeda590
	void SetKeyNonZeroColorName(struct FString animationName, int32_t frameIndex, enum class EChromaSDKKeyboardKey Key, struct FLinearColor colorParam); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.SetKeyNonZeroColorName // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0xeda2f0
	void SetKeyNonZeroColorAllFramesName(struct FString animationName, enum class EChromaSDKKeyboardKey Key, struct FLinearColor colorParam); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.SetKeyNonZeroColorAllFramesName // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0xeda1e0
	void SetKeyNonZeroColorAllFrames(int32_t animationId, enum class EChromaSDKKeyboardKey Key, struct FLinearColor colorParam); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.SetKeyNonZeroColorAllFrames // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0xeda0e0
	void SetKeyNonZeroColor(int32_t animationId, int32_t frameIndex, enum class EChromaSDKKeyboardKey Key, struct FLinearColor colorParam); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.SetKeyNonZeroColor // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0xed9fa0
	void SetKeyColorName(struct FString animationName, int32_t frameIndex, enum class EChromaSDKKeyboardKey Key, struct FLinearColor colorParam); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.SetKeyColorName // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0xed9e50
	void SetKeyColorAllFramesName(struct FString animationName, enum class EChromaSDKKeyboardKey Key, struct FLinearColor colorParam); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.SetKeyColorAllFramesName // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0xed9d40
	void SetKeyColorAllFrames(int32_t animationId, enum class EChromaSDKKeyboardKey Key, struct FLinearColor colorParam); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.SetKeyColorAllFrames // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0xed9c40
	void SetKeyColor(int32_t animationId, int32_t frameIndex, enum class EChromaSDKKeyboardKey Key, struct FLinearColor colorParam); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.SetKeyColor // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0xed9b00
	void SetKeyboardKeyColor(enum class EChromaSDKKeyboardKey Key, struct FLinearColor colorParam, struct TArray<struct FChromaSDKColors> Colors); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.SetKeyboardKeyColor // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0xeda440
	void SetChromaCustomFlagName(struct FString animationName, bool flag); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.SetChromaCustomFlagName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed9a30
	void SetChromaCustomColorAllFramesName(struct FString animationName); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.SetChromaCustomColorAllFramesName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed99a0
	void ReverseAllFramesName(struct FString animationName); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.ReverseAllFramesName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed9910
	void ReverseAllFrames(int32_t animationId); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.ReverseAllFrames // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed98a0
	void ReduceFramesName(struct FString animationName, int32_t N); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.ReduceFramesName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed97d0
	void ReduceFrames(int32_t animationId, int32_t N); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.ReduceFrames // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed9720
	void PreviewFrameName(struct FString animationName, int32_t frameId); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.PreviewFrameName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed9650
	int32_t PreviewFrame(int32_t animationId, int32_t frameId); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.PreviewFrame // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed9590
	void PlayAnimations(struct TArray<struct FString> animationNames, bool Loop); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.PlayAnimations // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0xed9480
	void PlayAnimationName(struct FString animationName, bool Loop); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.PlayAnimationName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed92e0
	void PlayAnimationComposite(struct FString animationName, bool Loop); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.PlayAnimationComposite // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed93b0
	void PlayAnimation(struct FString animationName, bool Loop); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.PlayAnimation // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed92e0
	void OverrideFrameDurationName(struct FString animationName, float DURATION); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.OverrideFrameDurationName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed9210
	void OverrideFrameDurationComposite(struct FString animationName, float DURATION); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.OverrideFrameDurationComposite // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed9140
	void OffsetNonZeroColorsName(struct FString animationName, int32_t frameId, int32_t red, int32_t green, int32_t blue); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.OffsetNonZeroColorsName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed8fc0
	void OffsetNonZeroColorsAllFramesName(struct FString animationName, int32_t red, int32_t green, int32_t blue); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.OffsetNonZeroColorsAllFramesName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed8e80
	void OffsetNonZeroColorsAllFrames(int32_t animationId, int32_t red, int32_t green, int32_t blue); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.OffsetNonZeroColorsAllFrames // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed8d50
	void OffsetNonZeroColors(int32_t animationId, int32_t frameId, int32_t red, int32_t green, int32_t blue); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.OffsetNonZeroColors // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed8be0
	void OffsetColorsName(struct FString animationName, int32_t frameId, int32_t red, int32_t green, int32_t blue); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.OffsetColorsName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed8a60
	void OffsetColorsAllFramesName(struct FString animationName, int32_t red, int32_t green, int32_t blue); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.OffsetColorsAllFramesName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed8920
	void OffsetColorsAllFrames(int32_t animationId, int32_t red, int32_t green, int32_t blue); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.OffsetColorsAllFrames // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed87f0
	void OffsetColors(int32_t animationId, int32_t frameId, int32_t red, int32_t green, int32_t blue); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.OffsetColors // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed8680
	void MultiplyTargetColorLerpAllFramesName(struct FString animationName, struct FLinearColor colorParam1, struct FLinearColor colorParam2); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.MultiplyTargetColorLerpAllFramesName // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0xed8550
	void MultiplyTargetColorLerpAllFrames(int32_t animationId, struct FLinearColor colorParam1, struct FLinearColor colorParam2); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.MultiplyTargetColorLerpAllFrames // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0xed8440
	void MultiplyNonZeroTargetColorLerpAllFramesName(struct FString animationName, struct FLinearColor colorParam1, struct FLinearColor colorParam2); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.MultiplyNonZeroTargetColorLerpAllFramesName // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0xed8310
	void MultiplyNonZeroTargetColorLerpAllFrames(int32_t animationId, struct FLinearColor colorParam1, struct FLinearColor colorParam2); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.MultiplyNonZeroTargetColorLerpAllFrames // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0xed8200
	void MultiplyIntensityRGBName(struct FString animationName, int32_t frameId, int32_t red, int32_t green, int32_t blue); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.MultiplyIntensityRGBName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed8080
	void MultiplyIntensityRGB(int32_t animationId, int32_t frameId, int32_t red, int32_t green, int32_t blue); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.MultiplyIntensityRGB // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed7f10
	void MultiplyIntensityName(struct FString animationName, int32_t frameId, float Intensity); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.MultiplyIntensityName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed7e00
	void MultiplyIntensityColorName(struct FString animationName, int32_t frameId, struct FLinearColor colorParam); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.MultiplyIntensityColorName // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0xed7cf0
	void MultiplyIntensityColorAllFramesName(struct FString animationName, struct FLinearColor colorParam); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.MultiplyIntensityColorAllFramesName // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0xed7c20
	void MultiplyIntensityColorAllFrames(int32_t animationId, struct FLinearColor colorParam); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.MultiplyIntensityColorAllFrames // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0xed7b60
	void MultiplyIntensityColor(int32_t animationId, int32_t frameId, struct FLinearColor colorParam); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.MultiplyIntensityColor // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0xed7a60
	void MultiplyIntensityAllFramesRGBName(struct FString animationName, float redIntensity, float greenIntensity, float blueIntensity); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.MultiplyIntensityAllFramesRGBName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed7910
	void MultiplyIntensityAllFramesRGB(int32_t animationId, float redIntensity, float greenIntensity, float blueIntensity); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.MultiplyIntensityAllFramesRGB // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed77e0
	void MultiplyIntensityAllFramesName(struct FString animationName, float Intensity); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.MultiplyIntensityAllFramesName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed7710
	void MultiplyIntensityAllFrames(int32_t animationId, float Intensity); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.MultiplyIntensityAllFrames // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed7650
	void MultiplyIntensity(int32_t animationId, int32_t frameId, float Intensity); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.MultiplyIntensity // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed7560
	void MultiplyColorLerpAllFramesName(struct FString animationName, struct FLinearColor colorParam1, struct FLinearColor colorParam2); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.MultiplyColorLerpAllFramesName // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0xed7430
	void MultiplyColorLerpAllFrames(int32_t animationId, struct FLinearColor colorParam1, struct FLinearColor colorParam2); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.MultiplyColorLerpAllFrames // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0xed7320
	void MakeBlankFramesRGBName(struct FString animationName, int32_t frameCount, float DURATION, int32_t red, int32_t green, int32_t blue); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.MakeBlankFramesRGBName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed6d60
	void MakeBlankFramesRGB(int32_t animationId, int32_t frameCount, float DURATION, int32_t red, int32_t green, int32_t blue); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.MakeBlankFramesRGB // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed6bb0
	void MakeBlankFramesRandomName(struct FString animationName, int32_t frameCount, float DURATION); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.MakeBlankFramesRandomName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed7210
	void MakeBlankFramesRandomBlackAndWhiteName(struct FString animationName, int32_t frameCount, float DURATION); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.MakeBlankFramesRandomBlackAndWhiteName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed7100
	void MakeBlankFramesRandomBlackAndWhite(int32_t animationId, int32_t frameCount, float DURATION); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.MakeBlankFramesRandomBlackAndWhite // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed7010
	void MakeBlankFramesRandom(int32_t animationId, int32_t frameCount, float DURATION); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.MakeBlankFramesRandom // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed6f20
	void MakeBlankFramesName(struct FString animationName, int32_t frameCount, float DURATION, struct FLinearColor colorParam); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.MakeBlankFramesName // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0xed6a60
	void MakeBlankFrames(int32_t animationId, int32_t frameCount, float DURATION, struct FLinearColor colorParam); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.MakeBlankFrames // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0xed6920
	void LoadAnimationName(struct FString animationName); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.LoadAnimationName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed6890
	void LoadAnimation(int32_t animationId); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.LoadAnimation // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed6820
	int32_t LerpColorBGR(int32_t From, int32_t To, float T); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.LerpColorBGR // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed6730
	struct FLinearColor LerpColor(struct FLinearColor colorParam1, struct FLinearColor colorParam2, float T); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.LerpColor // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0xed6610
	float Lerp(float Start, float End, float amt); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.Lerp // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed6500
	bool IsPlatformWindows(); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.IsPlatformWindows // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed64d0
	bool IsInitialized(); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.IsInitialized // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed6470
	bool IsAnimationTypePlaying(enum class EChromaSDKDeviceEnum Device); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.IsAnimationTypePlaying // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed63f0
	bool IsAnimationPlaying(struct FString animationName); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.IsAnimationPlaying // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed6350
	void InvertColorsAllFramesName(struct FString animationName); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.InvertColorsAllFramesName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed62c0
	void InvertColorsAllFrames(int32_t animationId); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.InvertColorsAllFrames // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed6250
	void InsertFrameName(struct FString animationName, int32_t sourceFrame, int32_t targetFrame); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.InsertFrameName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed6150
	void InsertFrame(int32_t animationId, int32_t sourceFrame, int32_t targetFrame); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.InsertFrame // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed6060
	void InsertDelayName(struct FString animationName, int32_t frameId, int32_t Delay); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.InsertDelayName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed5f60
	void InsertDelay(int32_t animationId, int32_t frameId, int32_t Delay); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.InsertDelay // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed5e70
	struct FLinearColor GetRGB(int32_t red, int32_t green, int32_t blue); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.GetRGB // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0xed5d70
	int32_t GetPlayingAnimationId(int32_t Index); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.GetPlayingAnimationId // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed5cf0
	int32_t GetPlayingAnimationCount(); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.GetPlayingAnimationCount // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed5cc0
	struct FLinearColor GetMouseLedColor(enum class EChromaSDKMouseLed led, struct TArray<struct FChromaSDKColors> Colors); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.GetMouseLedColor // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0xed5ba0
	int32_t GetMaxRow(enum class EChromaSDKDevice2DEnum Device); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.GetMaxRow // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed5b20
	int32_t GetMaxLeds(enum class EChromaSDKDevice1DEnum Device); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.GetMaxLeds // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed5aa0
	int32_t GetMaxColumn(enum class EChromaSDKDevice2DEnum Device); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.GetMaxColumn // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed5a20
	struct FLinearColor GetKeyColorName(struct FString animationName, int32_t frameIndex, enum class EChromaSDKKeyboardKey Key); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.GetKeyColorName // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0xed5700
	struct FLinearColor GetKeyColor(int32_t animationId, int32_t frameIndex, enum class EChromaSDKKeyboardKey Key); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.GetKeyColor // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0xed5600
	enum class EChromaSDKKeyboardKey GetKeyboardRazerKey(struct FKey Key); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.GetKeyboardRazerKey // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed5940
	struct FLinearColor GetKeyboardKeyColor(enum class EChromaSDKKeyboardKey Key, struct TArray<struct FChromaSDKColors> Colors); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.GetKeyboardKeyColor // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0xed5820
	int32_t GetFrameCountName(struct FString animationName); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.GetFrameCountName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed5560
	int32_t GetFrameCount(int32_t animationId); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.GetFrameCount // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed54e0
	struct FString GetAnimationName(int32_t animationId); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.GetAnimationName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed5420
	int32_t GetAnimationIdByIndex(int32_t Index); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.GetAnimationIdByIndex // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed53a0
	int32_t GetAnimationId(struct FString animationName); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.GetAnimationId // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed52d0
	int32_t GetAnimationCount(); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.GetAnimationCount // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed5370
	int32_t GetAnimation(struct FString animationName); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.GetAnimation // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed52d0
	void FillZeroColorRGBName(struct FString animationName, int32_t frameId, int32_t red, int32_t green, int32_t blue); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.FillZeroColorRGBName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed5150
	void FillZeroColorRGB(int32_t animationId, int32_t frameId, int32_t red, int32_t green, int32_t blue); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.FillZeroColorRGB // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed4fe0
	void FillZeroColorName(struct FString animationName, int32_t frameId, struct FLinearColor colorParam); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.FillZeroColorName // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0xed4ed0
	void FillZeroColorAllFramesRGBName(struct FString animationName, int32_t red, int32_t green, int32_t blue); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.FillZeroColorAllFramesRGBName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed4d90
	void FillZeroColorAllFramesRGB(int32_t animationId, int32_t red, int32_t green, int32_t blue); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.FillZeroColorAllFramesRGB // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed4c60
	void FillZeroColorAllFramesName(struct FString animationName, struct FLinearColor colorParam); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.FillZeroColorAllFramesName // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0xed4b90
	void FillZeroColorAllFrames(int32_t animationId, struct FLinearColor colorParam); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.FillZeroColorAllFrames // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0xed4ad0
	void FillZeroColor(int32_t animationId, int32_t frameId, struct FLinearColor colorParam); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.FillZeroColor // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0xed49d0
	void FillThresholdRGBColorsAllFramesRGBName(struct FString animationName, int32_t redThreshold, int32_t greenThreshold, int32_t blueThreshold, int32_t red, int32_t green, int32_t blue); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.FillThresholdRGBColorsAllFramesRGBName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed47d0
	void FillThresholdRGBColorsAllFramesRGB(int32_t animationId, int32_t redThreshold, int32_t greenThreshold, int32_t blueThreshold, int32_t red, int32_t green, int32_t blue); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.FillThresholdRGBColorsAllFramesRGB // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed45f0
	void FillThresholdColorsMinMaxAllFramesRGBName(struct FString animationName, int32_t minThreshold, int32_t minRed, int32_t minGreen, int32_t minBlue, int32_t maxThreshold, int32_t maxRed, int32_t maxGreen, int32_t maxBlue); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.FillThresholdColorsMinMaxAllFramesRGBName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed4370
	void FillThresholdColorsMinMaxAllFramesRGB(int32_t animationId, int32_t minThreshold, int32_t minRed, int32_t minGreen, int32_t minBlue, int32_t maxThreshold, int32_t maxRed, int32_t maxGreen, int32_t maxBlue); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.FillThresholdColorsMinMaxAllFramesRGB // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed4110
	void FillThresholdColorsAllFramesRGBName(struct FString animationName, int32_t Threshold, int32_t red, int32_t green, int32_t blue); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.FillThresholdColorsAllFramesRGBName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed3f90
	void FillThresholdColorsAllFramesRGB(int32_t animationId, int32_t Threshold, int32_t red, int32_t green, int32_t blue); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.FillThresholdColorsAllFramesRGB // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed3e20
	void FillThresholdColorsAllFramesName(struct FString animationName, int32_t Threshold, struct FLinearColor colorParam); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.FillThresholdColorsAllFramesName // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0xed3d10
	void FillThresholdColorsAllFrames(int32_t animationId, int32_t Threshold, struct FLinearColor colorParam); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.FillThresholdColorsAllFrames // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0xed3c10
	void FillRandomColorsName(struct FString animationName, int32_t frameId); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.FillRandomColorsName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed3b40
	void FillRandomColorsBlackAndWhiteName(struct FString animationName, int32_t frameId); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.FillRandomColorsBlackAndWhiteName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed3a70
	void FillRandomColorsBlackAndWhiteAllFramesName(struct FString animationName); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.FillRandomColorsBlackAndWhiteAllFramesName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed39e0
	void FillRandomColorsBlackAndWhiteAllFrames(int32_t animationId); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.FillRandomColorsBlackAndWhiteAllFrames // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed3970
	void FillRandomColorsBlackAndWhite(int32_t animationId, int32_t frameId); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.FillRandomColorsBlackAndWhite // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed38c0
	void FillRandomColorsAllFramesName(struct FString animationName); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.FillRandomColorsAllFramesName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed3830
	void FillRandomColorsAllFrames(int32_t animationId); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.FillRandomColorsAllFrames // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed37c0
	void FillRandomColors(int32_t animationId, int32_t frameId); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.FillRandomColors // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed3710
	void FillNonZeroColorRGBName(struct FString animationName, int32_t frameId, int32_t red, int32_t green, int32_t blue); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.FillNonZeroColorRGBName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed3590
	void FillNonZeroColorRGB(int32_t animationId, int32_t frameId, int32_t red, int32_t green, int32_t blue); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.FillNonZeroColorRGB // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed3420
	void FillNonZeroColorName(struct FString animationName, int32_t frameId, struct FLinearColor colorParam); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.FillNonZeroColorName // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0xed3310
	void FillNonZeroColorAllFramesRGBName(struct FString animationName, int32_t red, int32_t green, int32_t blue); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.FillNonZeroColorAllFramesRGBName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed31d0
	void FillNonZeroColorAllFramesRGB(int32_t animationId, int32_t red, int32_t green, int32_t blue); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.FillNonZeroColorAllFramesRGB // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed30a0
	void FillNonZeroColorAllFramesName(struct FString animationName, struct FLinearColor colorParam); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.FillNonZeroColorAllFramesName // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0xed2fd0
	void FillNonZeroColorAllFrames(int32_t animationId, struct FLinearColor colorParam); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.FillNonZeroColorAllFrames // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0xed2f10
	void FillNonZeroColor(int32_t animationId, int32_t frameId, struct FLinearColor colorParam); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.FillNonZeroColor // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0xed2e10
	void FillColorRGBName(struct FString animationName, int32_t frameId, int32_t red, int32_t green, int32_t blue); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.FillColorRGBName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed2c90
	void FillColorRGB(int32_t animationId, int32_t frameId, int32_t red, int32_t green, int32_t blue); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.FillColorRGB // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed2b20
	void FillColorName(struct FString animationName, int32_t frameId, struct FLinearColor colorParam); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.FillColorName // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0xed2a10
	void FillColorAllFramesRGBName(struct FString animationName, int32_t red, int32_t green, int32_t blue); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.FillColorAllFramesRGBName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed28d0
	void FillColorAllFramesRGB(int32_t animationId, int32_t red, int32_t green, int32_t blue); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.FillColorAllFramesRGB // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed27a0
	void FillColorAllFramesName(struct FString animationName, struct FLinearColor colorParam); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.FillColorAllFramesName // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0xed26d0
	void FillColorAllFrames(int32_t animationId, struct FLinearColor colorParam); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.FillColorAllFrames // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0xed2610
	void FillColor(int32_t animationId, int32_t frameId, struct FLinearColor colorParam); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.FillColor // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0xed2510
	void FadeStartFramesName(struct FString animationName, int32_t fade); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.FadeStartFramesName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed2440
	void FadeStartFrames(int32_t animationId, int32_t fade); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.FadeStartFrames // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed2390
	void FadeEndFramesName(struct FString animationName, int32_t fade); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.FadeEndFramesName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed22c0
	void FadeEndFrames(int32_t animationId, int32_t fade); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.FadeEndFrames // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed2210
	void DuplicateMirrorFramesName(struct FString animationName); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.DuplicateMirrorFramesName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed2180
	void DuplicateMirrorFrames(int32_t animationId); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.DuplicateMirrorFrames // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed2110
	void DuplicateFramesName(struct FString animationName); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.DuplicateFramesName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed2080
	void DuplicateFrames(int32_t animationId); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.DuplicateFrames // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed2010
	void DuplicateFirstFrameName(struct FString animationName, int32_t frameCount); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.DuplicateFirstFrameName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed1f40
	void DuplicateFirstFrame(int32_t animationId, int32_t frameCount); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.DuplicateFirstFrame // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed1e90
	struct TArray<struct FChromaSDKColors> CreateRandomColorsBlackAndWhite2D(enum class EChromaSDKDevice2DEnum Device); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.CreateRandomColorsBlackAndWhite2D // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed1dd0
	struct TArray<struct FLinearColor> CreateRandomColorsBlackAndWhite1D(enum class EChromaSDKDevice1DEnum Device); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.CreateRandomColorsBlackAndWhite1D // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed1d10
	struct TArray<struct FChromaSDKColors> CreateRandomColors2D(enum class EChromaSDKDevice2DEnum Device); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.CreateRandomColors2D // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed1c50
	struct TArray<struct FLinearColor> CreateRandomColors1D(enum class EChromaSDKDevice1DEnum Device); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.CreateRandomColors1D // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed1b90
	struct TArray<struct FChromaSDKColors> CreateColors2D(enum class EChromaSDKDevice2DEnum Device); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.CreateColors2D // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed1ad0
	struct TArray<struct FLinearColor> CreateColors1D(enum class EChromaSDKDevice1DEnum Device); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.CreateColors1D // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed1a10
	void CopyNonZeroTargetAllKeysName(struct FString sourceAnimationName, struct FString targetAnimationName, int32_t frameId); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.CopyNonZeroTargetAllKeysName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed18f0
	void CopyNonZeroTargetAllKeysAllFramesOffsetName(struct FString sourceAnimationName, struct FString targetAnimationName, int32_t Offset); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.CopyNonZeroTargetAllKeysAllFramesOffsetName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed17d0
	void CopyNonZeroTargetAllKeysAllFramesOffset(int32_t sourceAnimationId, int32_t targetAnimationId, int32_t Offset); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.CopyNonZeroTargetAllKeysAllFramesOffset // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed16e0
	void CopyNonZeroTargetAllKeysAllFramesName(struct FString sourceAnimationName, struct FString targetAnimationName); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.CopyNonZeroTargetAllKeysAllFramesName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed1600
	void CopyNonZeroTargetAllKeysAllFrames(int32_t sourceAnimationId, int32_t targetAnimationId); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.CopyNonZeroTargetAllKeysAllFrames // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed1550
	void CopyNonZeroTargetAllKeys(int32_t sourceAnimationId, int32_t targetAnimationId, int32_t frameId); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.CopyNonZeroTargetAllKeys // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed1460
	void CopyNonZeroKeysColorName(struct FString sourceAnimationName, struct FString targetAnimationName, int32_t frameIndex, struct TArray<enum class EChromaSDKKeyboardKey> Keys); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.CopyNonZeroKeysColorName // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0xed12f0
	void CopyNonZeroKeysColorAllFramesName(struct FString sourceAnimationName, struct FString targetAnimationName, struct TArray<enum class EChromaSDKKeyboardKey> Keys); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.CopyNonZeroKeysColorAllFramesName // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0xed11b0
	void CopyNonZeroKeysColorAllFrames(int32_t sourceAnimationId, int32_t targetAnimationId, struct TArray<enum class EChromaSDKKeyboardKey> Keys); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.CopyNonZeroKeysColorAllFrames // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0xed10a0
	void CopyNonZeroKeysColor(int32_t sourceAnimationId, int32_t targetAnimationId, int32_t frameIndex, struct TArray<enum class EChromaSDKKeyboardKey> Keys); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.CopyNonZeroKeysColor // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0xed0f50
	void CopyNonZeroKeyColorName(struct FString sourceAnimationName, struct FString targetAnimationName, int32_t frameIndex, enum class EChromaSDKKeyboardKey Key); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.CopyNonZeroKeyColorName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed0df0
	void CopyNonZeroKeyColor(int32_t sourceAnimationId, int32_t targetAnimationId, int32_t frameIndex, enum class EChromaSDKKeyboardKey Key); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.CopyNonZeroKeyColor // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed0cc0
	void CopyNonZeroAllKeysOffsetName(struct FString sourceAnimationName, struct FString targetAnimationName, int32_t frameId, int32_t Offset); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.CopyNonZeroAllKeysOffsetName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed0b60
	void CopyNonZeroAllKeysOffset(int32_t sourceAnimationId, int32_t targetAnimationId, int32_t frameId, int32_t Offset); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.CopyNonZeroAllKeysOffset // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed0a30
	void CopyNonZeroAllKeysName(struct FString sourceAnimationName, struct FString targetAnimationName, int32_t frameId); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.CopyNonZeroAllKeysName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed0910
	void CopyNonZeroAllKeysAllFramesOffsetName(struct FString sourceAnimationName, struct FString targetAnimationName, int32_t Offset); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.CopyNonZeroAllKeysAllFramesOffsetName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed07f0
	void CopyNonZeroAllKeysAllFramesOffset(int32_t sourceAnimationId, int32_t targetAnimationId, int32_t Offset); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.CopyNonZeroAllKeysAllFramesOffset // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed0700
	void CopyNonZeroAllKeysAllFramesName(struct FString sourceAnimationName, struct FString targetAnimationName); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.CopyNonZeroAllKeysAllFramesName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed0620
	void CopyNonZeroAllKeysAllFrames(int32_t sourceAnimationId, int32_t targetAnimationId); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.CopyNonZeroAllKeysAllFrames // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed0570
	void CopyNonZeroAllKeys(int32_t sourceAnimationId, int32_t targetAnimationId, int32_t frameId); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.CopyNonZeroAllKeys // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xed0480
	void CopyKeysColorName(struct FString sourceAnimationName, struct FString targetAnimationName, int32_t frameIndex, struct TArray<enum class EChromaSDKKeyboardKey> Keys); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.CopyKeysColorName // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0xed0310
	void CopyKeysColorAllFramesName(struct FString sourceAnimationName, struct FString targetAnimationName, struct TArray<enum class EChromaSDKKeyboardKey> Keys); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.CopyKeysColorAllFramesName // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0xed01d0
	void CopyKeysColorAllFrames(int32_t sourceAnimationId, int32_t targetAnimationId, struct TArray<enum class EChromaSDKKeyboardKey> Keys); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.CopyKeysColorAllFrames // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0xed00c0
	void CopyKeysColor(int32_t sourceAnimationId, int32_t targetAnimationId, int32_t frameIndex, struct TArray<enum class EChromaSDKKeyboardKey> Keys); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.CopyKeysColor // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0xecff70
	void CopyKeyColorName(struct FString sourceAnimationName, struct FString targetAnimationName, int32_t frameIndex, enum class EChromaSDKKeyboardKey Key); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.CopyKeyColorName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xecfe10
	void CopyKeyColor(int32_t sourceAnimationId, int32_t targetAnimationId, int32_t frameIndex, enum class EChromaSDKKeyboardKey Key); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.CopyKeyColor // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xecfce0
	void CopyAnimationName(struct FString sourceAnimationName, struct FString targetAnimationName); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.CopyAnimationName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xecfc00
	void CopyAnimation(int32_t sourceAnimationId, struct FString targetAnimationName); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.CopyAnimation // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xecfb30
	void CopyAllKeysName(struct FString sourceAnimationName, struct FString targetAnimationName, int32_t frameId); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.CopyAllKeysName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xecfa10
	void CopyAllKeysAllFramesName(struct FString sourceAnimationName, struct FString targetAnimationName); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.CopyAllKeysAllFramesName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xecf930
	void CopyAllKeysAllFrames(int32_t sourceAnimationId, int32_t targetAnimationId); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.CopyAllKeysAllFrames // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xecf880
	void CopyAllKeys(int32_t sourceAnimationId, int32_t targetAnimationId, int32_t frameId); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.CopyAllKeys // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xecf790
	void CloseAnimationName(struct FString animationName); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.CloseAnimationName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xecf700
	void CloseAnimation(int32_t animationId); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.CloseAnimation // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xecf690
	void ClearAnimationType(enum class EChromaSDKDeviceEnum Device); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.ClearAnimationType // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xecf620
	void ClearAll(); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.ClearAll // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xecf600
	int32_t ChromaSDKUnInit(); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.ChromaSDKUnInit // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xecf5d0
	int32_t ChromaSDKSetEffect(struct FChromaSDKGuid EffectId); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.ChromaSDKSetEffect // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0xecf520
	int32_t ChromaSDKInit(); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.ChromaSDKInit // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xecf4f0
	int32_t ChromaSDKDeleteEffect(struct FChromaSDKGuid EffectId); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.ChromaSDKDeleteEffect // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0xecf440
	struct FChromaSDKEffectResult ChromaSDKCreateEffectStatic(enum class EChromaSDKDeviceEnum Device, struct FLinearColor colorParam); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.ChromaSDKCreateEffectStatic // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0xecf340
	struct FChromaSDKEffectResult ChromaSDKCreateEffectNone(enum class EChromaSDKDeviceEnum Device); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.ChromaSDKCreateEffectNone // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xecf2a0
	struct FChromaSDKEffectResult ChromaSDKCreateEffectKeyboardCustom2D(struct TArray<struct FChromaSDKColors> Colors); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.ChromaSDKCreateEffectKeyboardCustom2D // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0xecf1a0
	struct FChromaSDKEffectResult ChromaSDKCreateEffectCustom2D(enum class EChromaSDKDevice2DEnum Device, struct TArray<struct FChromaSDKColors> Colors); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.ChromaSDKCreateEffectCustom2D // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0xecf060
	struct FChromaSDKEffectResult ChromaSDKCreateEffectCustom1D(enum class EChromaSDKDevice1DEnum Device, struct TArray<struct FLinearColor> Colors); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.ChromaSDKCreateEffectCustom1D // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0xecef50
	void AppendAllFramesName(struct FString sourceAnimationName, struct FString targetAnimationName); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.AppendAllFramesName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xecee70
	void AppendAllFrames(int32_t sourceAnimationId, int32_t targetAnimationId); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.AppendAllFrames // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xecedc0
	void AddNonZeroTargetAllKeysAllFramesOffsetName(struct FString sourceAnimationName, struct FString targetAnimationName, int32_t Offset); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.AddNonZeroTargetAllKeysAllFramesOffsetName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xececa0
	void AddNonZeroTargetAllKeysAllFramesOffset(int32_t sourceAnimationId, int32_t targetAnimationId, int32_t Offset); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.AddNonZeroTargetAllKeysAllFramesOffset // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xecebb0
	void AddNonZeroTargetAllKeysAllFramesName(struct FString sourceAnimationName, struct FString targetAnimationName); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.AddNonZeroTargetAllKeysAllFramesName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xecead0
	void AddNonZeroTargetAllKeysAllFrames(int32_t sourceAnimationId, int32_t targetAnimationId); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.AddNonZeroTargetAllKeysAllFrames // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xecea20
	void AddNonZeroAllKeysName(struct FString sourceAnimationName, struct FString targetAnimationName, int32_t frameId); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.AddNonZeroAllKeysName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xece900
	void AddNonZeroAllKeysAllFramesOffsetName(struct FString sourceAnimationName, struct FString targetAnimationName, int32_t Offset); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.AddNonZeroAllKeysAllFramesOffsetName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xece7e0
	void AddNonZeroAllKeysAllFramesOffset(int32_t sourceAnimationId, int32_t targetAnimationId, int32_t Offset); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.AddNonZeroAllKeysAllFramesOffset // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xece6f0
	void AddNonZeroAllKeysAllFramesName(struct FString sourceAnimationName, struct FString targetAnimationName); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.AddNonZeroAllKeysAllFramesName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xece610
	void AddNonZeroAllKeysAllFrames(int32_t sourceAnimationId, int32_t targetAnimationId); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.AddNonZeroAllKeysAllFrames // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xece560
	void AddNonZeroAllKeys(int32_t sourceAnimationId, int32_t targetAnimationId, int32_t frameId); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.AddNonZeroAllKeys // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xece470
};

